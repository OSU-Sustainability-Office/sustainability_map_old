{"remainingRequest":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/thread-loader/dist/cjs.js!/Users/Brogan/Documents/sus/sustainability_map/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Brogan/Documents/sus/sustainability_map/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Brogan/Documents/sus/sustainability_map/src/components/navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Brogan/Documents/sus/sustainability_map/src/components/navbar.vue","mtime":1553740102012},{"path":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Brogan/Documents/sus/sustainability_map/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'navbar',\n  data () {\n    return {\n      search: ''\n    }\n  },\n  methods: {\n    querySearch: function (query, cb) {\n      let values = this.$store.getters.allPoints.filter((point, index, arr) => (\n        // Check that the item's name includes query\n        (point.properties.Name && point.properties.Name.toLowerCase().includes(query.toLowerCase())) ||\n        // Check that description includes query\n        (point.properties.description && point.properties.description.toLowerCase().includes(query.toLowerCase()))\n      )).sort()\n\n      let m = values.map(e => { return e.properties.Name }).sort()\n      let c = m.reduce((acc, cur, i) => {\n        (!acc[cur]) ? acc[cur] = [values[i]] : acc[cur].push(values[i])\n        return acc\n      }, {})\n\n      // Build autocomplete list\n      let r = []\n      Object.keys(c).forEach(function (key) {\n        r.push({ value: key, array: c[key] })\n      })\n\n      // eslint-disable-next-line\n      cb(r)\n    },\n    handleSelect: function (item) {\n      this.$store.commit('filterPoints', item.array)\n      this.$eventHub.$emit('updateClusters')\n    }\n  }\n}\n",{"version":3,"sources":["navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"navbar.vue","sourceRoot":"src/components","sourcesContent":["<!--\n@Author: Brogan Miner <Brogan>\n@Date:   2019-03-27T14:08:44-07:00\n@Email:  brogan.miner@oregonstate.edu\n@Last modified by:   Brogan\n@Last modified time: 2019-03-27T19:28:22-07:00\n-->\n\n<template>\n  <div class=\"navigation\">\n    <el-row :display='\"flex\"' :align='\"middle\"' class=\"row\">\n      <el-col :span='6'>\n        <img src='/logo.png' id='logo' />\n      </el-col>\n      <!-- <el-col :span='8'>\n        <el-autocomplete prefix-icon=\"el-icon-search\" v-model=\"search\" :fetch-suggestions=\"querySearch\" placeholder=\"Search\" :trigger-on-focus=\"false\" @select=\"handleSelect\"></el-autocomplete>\n      </el-col> -->\n    </el-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'navbar',\n  data () {\n    return {\n      search: ''\n    }\n  },\n  methods: {\n    querySearch: function (query, cb) {\n      let values = this.$store.getters.allPoints.filter((point, index, arr) => (\n        // Check that the item's name includes query\n        (point.properties.Name && point.properties.Name.toLowerCase().includes(query.toLowerCase())) ||\n        // Check that description includes query\n        (point.properties.description && point.properties.description.toLowerCase().includes(query.toLowerCase()))\n      )).sort()\n\n      let m = values.map(e => { return e.properties.Name }).sort()\n      let c = m.reduce((acc, cur, i) => {\n        (!acc[cur]) ? acc[cur] = [values[i]] : acc[cur].push(values[i])\n        return acc\n      }, {})\n\n      // Build autocomplete list\n      let r = []\n      Object.keys(c).forEach(function (key) {\n        r.push({ value: key, array: c[key] })\n      })\n\n      // eslint-disable-next-line\n      cb(r)\n    },\n    handleSelect: function (item) {\n      this.$store.commit('filterPoints', item.array)\n      this.$eventHub.$emit('updateClusters')\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .row {\n    height: 100%;\n    margin: 0.5em;\n  }\n  .navigation {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    background-color: #D73F09;\n    height: 60px;\n  }\n  #logo {\n    height: calc(60px - 1em);\n    width: auto;\n  }\n</style>\n"]}]}